.button {
  @include lum-typo-button;

  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 22px;
  padding: 0;
  cursor: pointer;
  background-color: var(--lum-color-transparent);
  border: none;
  transition: box-shadow 0.2s ease-in-out;

  * {
    box-sizing: border-box;
  }

  // CSS for button content
  .buttonContent {
    display: flex;
    gap: 10px;
    align-items: center;
    justify-content: space-between;
    padding: 5px;
  }

  .icon {
    font-size: var(--lum-size-icon-s);
    color: #122f54;
  }
}

// CSS for 'primary' | 'secondary' | 'warning' | 'danger' | 'filter' | 'live'
// TODO: use var() instead of hardcoded values, match Figma colors scheme
.primary {
  color: white;
  background-color: var(--lum-color-button-primary-background);

  &:hover {
    background-color: var(--lum-color-button-background-hover);
  }

  &:focus {
    border: 1px solid #fdfdfd;
    border-radius: 3px;
    box-shadow: 0 0 0 2px var(--lum-color-button-primary-background);
  }

  &:disabled {
    color: var(--lum-color-button-disabled);
    cursor: not-allowed;
    background-color: var(--lum-color-button-background-hover);
  }
}

.secondary {
  color: var(--lum-color-button-primary-background);
  background-color: white;
  border: 1px solid var(--lum-color-button-primary-background);

  &:hover {
    color: #046158;
    background-color: #e6f7f6;
    border: 1px solid #046158;
  }

  &:focus {
    color: var(--lum-color-button-primary-background);
    border: 2px solid var(--lum-color-button-primary-background);
    border-radius: 3px;
  }

  &:disabled {
    color: #5e5e61;
    cursor: not-allowed;
    background-color: #f5f5f7;
    border: none;
  }
}

.filter {
  padding: 7px;
  color: #1117;
  background-color: #f7f7f7;
  border: 1px solid lightgray;
  border-radius: 5px;

  &:hover {
    color: white;
    background-color: gray;
  }
}

.live {
  color: #1117;
  background-color: #f7f7f7;
  border: 1px solid lightgray;
  border-radius: 5px;

  &:hover {
    color: white;
    background-color: gray;
  }
}

.warning {
  border: 1px solid var(--lum-color-button-warning-background);
  box-shadow: 0 0 0 0 var(--lum-color-button-warning-background);

  &:hover {
    box-shadow: 0 3px 5px -1px var(--lum-color-button-warning-background);
  }

  &:not(.outline) {
    background-color: var(--lum-color-button-warning-background);
  }

  &.outline {
    color: var(--lum-color-button-warning-background);
  }
}

.danger {
  border: 1px solid var(--lum-color-button-danger-background);
  box-shadow: 0 0 0 0 var(--lum-color-button-danger-background);

  &:hover {
    box-shadow: 0 3px 5px -1px var(--lum-color-button-danger-background);
  }

  &:not(.outline) {
    background-color: var(--lum-color-button-danger-background);
  }

  &.outline {
    color: var(--lum-color-button-danger-background);
  }
}

// CSS Gives full width to a button
.fullWidth {
  width: 100%;
}

// CSS for menuButton style that also affects buttonText and icon in the menuButton
.menuButton {
  justify-content: start;
  width: 100%;

  &:not(:disabled):hover {
    background-color: #e6f7f6;
  }

  &:disabled {
    cursor: not-allowed;
    background-color: #f7f7f7;

    .icon {
      color: #a7bdd9;
    }
  }
}

// Used for prop size to set between small or large sizes for the button
.large {
  padding: 12px 18px;
  font-size: 16px;
  font-style: normal;
  font-weight: 600;
  line-height: 1;
  border-radius: 3px;
}

.small {
  padding: 3px 10px;
  font-size: 14px;
  font-style: normal;
  font-weight: 600;
  line-height: normal;
  border-radius: 3px;
}
